{"version":3,"sources":["services/persons-service.js","components/FilterForm.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","FilterForm","props","className","value","newFilter","onChange","handleFilterChange","PersonForm","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","handleDelete","map","person","name","number","onClick","Notification","message","includes","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","errorMessage","setErrorMessage","useEffect","personService","initialPersons","console","log","length","personsToShow","filter","toLowerCase","event","target","preventDefault","nameObject","found","find","window","confirm","personsService","returnedPerson","setTimeout","catch","error","concat","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.409adaf6.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React from 'react'\n\nconst FilterForm = (props) => {\n  return (\n  <form className='form'>\n      <div>\n          filter shown with: <input \n          value={props.newFilter} \n          onChange={props.handleFilterChange}/>\n      </div>\n      </form>\n  )\n}\n\nexport default FilterForm","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson} className='form'>\n    <div>\n      name: <input \n      value={props.newName} \n      onChange={props.handleNameChange}/>\n    </div>\n    <div>\n      number: <input \n      value={props.newNumber} \n      onChange={props.handleNumberChange}/>\n    </div>\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({persons, handleDelete}) => {\n  return (\n    <div className='person'>\n      {persons.map(person => \n        <div key={person.id}> {person.name} {person.number} \n         <button onClick={() => handleDelete(person)}>delete</button> </div>\n          )}\n    </div>\n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\nelse {\nif ((message.includes(\"Added\"))||(message.includes(\"was deleted\")) ){\n  return  (\n    <div className=\"noterror\">\n      {message}\n    </div>\n  )\n}\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}}\n\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons-service'\nimport FilterForm from './components/FilterForm'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personsService from './services/persons-service'\n\n\n\nconst App = () => {\n  \n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n  \n  console.log('render', persons.length, 'persons')\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n      \n    }\n    const found = persons.find(person => person.name === newName)\n    if (found) {\n     if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) \n     {\n       personsService\n       .update(found.id, nameObject)\n       .then(returnedPerson => {\n        setErrorMessage (`Person's ${newName} phonenumber was replaced`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n         setPersons(persons.map(person => person.id !== found.id ? person: returnedPerson))\n       })\n       .catch(error => {\n        console.log(error.response.data)\n        /*setErrorMessage (`Information of ${newName} has already been removed from server`)*/\n        setErrorMessage (error.response.data.error)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n          /*setPersons(persons.filter(person => person.id !== found.id))*/\n      })\n         \n    } } \n    else\n    {\n      personService\n      .create(nameObject)\n      .then(returnedPerson => {\n        setErrorMessage (`Added ${newName}`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      setPersons(persons.concat(returnedPerson))\n      setNewName('')\n      setNewNumber('')\n    }) \n    .catch(error => {\n      console.log(error.response.data)\n      setErrorMessage (error.response.data.error)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })  \n    }\n  } \n\n const handleDelete = (deletedPerson) => {\n  \n  if (window.confirm(`Delete ${deletedPerson.name}?`))\n{\n  personService\n    .remove(deletedPerson.id)\n\n    .then(returnedPerson => {    \n      setErrorMessage (`${deletedPerson.name} was deleted`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setPersons(persons.filter(person => person.id !== deletedPerson.id ))\n    })\n    \n    .catch(error => {\n      setErrorMessage (`Information of ${deletedPerson.name} has already been removed from server`)\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n        setPersons(persons.filter(person => person.id !== deletedPerson.id))\n    })\n}\n }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  const personsToShow = persons.filter(person => \n      person.name.toLowerCase().includes(newFilter.toLowerCase()) === true)\n     \n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={errorMessage} />\n\n      <FilterForm newFilter = {newFilter} handleFilterChange = {handleFilterChange}/>\n\n      <h3>add a new</h3>\n\n      <PersonForm addPerson = {addPerson} newName = {newName} handleNameChange = {handleNameChange}\n       newNumber = {newNumber} handleNumberChange = {handleNumberChange}/>\n\n      <h3>Numbers</h3>\n      \n      <Persons persons = {personsToShow} handleDelete = {handleDelete}/>\n      \n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}